services:
  # Test web application
  webapp:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./test-app:/usr/share/nginx/html
    networks:
      - qa-network


  # Test runner
  qa-tests:
    build: .
    depends_on:
      - webapp
    environment:
      - TEST_URL=http://webapp
    volumes:
      - ./reports:/app/reports
    # This command starts metrics server AND keeps container running
    command: |
      sh -c "
      python metrics_exporter.py &
      echo 'Metrics server started. Container ready for testing.'
      tail -f /dev/null
      "
    networks:
      - qa-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - qa-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:10.0.3
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - qa-network

  metrics-exporter:
    image: python:3.10-slim
    volumes:
      - ./metrics_exporter.py:/app/metrics_exporter.py
    working_dir: /app
    command: ["bash", "-c", "pip install prometheus-client && python metrics_exporter.py"]
    ports:
      - "9464:9464"
    networks:
      - qa-network

networks:
  qa-network:
    driver: bridge